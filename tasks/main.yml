---
- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure data folder exists
  file: path={{ es_path_data }} owner=elasticsearch group=elasticsearch state=directory

- name: Ensure work folder exists
  file: path={{ es_path_work }} owner=elasticsearch group=elasticsearch state=directory

- name: Ensure logs folder exists
  file: path={{ es_path_logs }} owner=elasticsearch group=elasticsearch state=directory

- name: Configure Elasticsearch.
  lineinfile: >
    dest=/etc/elasticsearch/elasticsearch.yml
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { regexp: '.*cluster\.name', line: 'cluster.name: {{ es_cluster_name }}' }
    - { regexp: '.*transport\.tcp\.compress', line: 'transport.tcp.compress: {{ es_transport_tcp_compress }}' }
    - { regexp: '.*http\.enabled', line: 'http.enabled: {{ es_http_enabled }}' }
    - { regexp: '.*script\.disable_dynamic', line: 'script.disable_dynamic: true' }
    - { regexp: '.*network\.bind_host', line: "network.bind_host: {{ hostvars[ansible_hostname]['ansible_em1']['ipv4']['address'] }}" }
    - { regexp: '.*http\.cors\.enabled', line: 'http.cors.enabled: {{ es_http_cors_enabled }}' }
    - { regexp: '.*http\.cors\.allow-origin', line: 'http.cors.allow-origin: {{ es_http_cors_allow_origin }}' }
    - { regexp: '.*discovery.zen.ping.multicast.enabled', line: 'discovery.zen.ping.multicast.enabled: false'}
    - { regexp: '.*discovery.zen.ping.unicast.hosts', line: "discovery.zen.ping.unicast.hosts: [{{ \"', '\".join(groups.elasticsearch) }}]"}
  notify: restart elasticsearch

- name: Start Elasticsearch.
  service: name=elasticsearch state=started enabled=yes
